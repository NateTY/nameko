{"version":3,"sources":["lib/data.js","lib/test.js","comps/TunnelArea.js","comps/NamekoArea.js","comps/ResultArea.js","App.js","serviceWorker.js","index.js"],"names":["namekoLevelStatusMap","split","name","desc","namekos","skills","values","allTunnelConfig","count","memos","type","valueThresholds","skillValueBonus","reward","is7","allSkills","allNamekos","is7Namekos","allTreasures","allStuffs","go","tunnel","team","map","n","join","passedMemos","unpassedMemos","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","memo","value","vts","svb","_ref","_ref2","Object","slicedToArray","skill","sValue","bonus","needAll","concat","a","passed","_vts$","threshold","namekoValue","allHas","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","member","nameko","red","blue","green","includes","err","return","needCount","parseInt","substr","currentCount","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","res","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","vt","_vt","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","s","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","length","push","verifyNamekos","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","console","log","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","v","Number","isInteger","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","sortResults","r1","r2","funcs","r1Count","forEach","p","r2Count","i","r","printResult","result","func","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","gResults","str","outerPrintFunc","Memo","_this$props$memo","this","props","react_default","createElement","className","Component","Tunnel","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","opened","_this2","_this$props","isSelected","onSelect","style","backgroundColor","onClick","setState","idx","TunnelArea_Memo","key","_this$props2","selectedTunnel","onSelectTunnel","config","TunnelArea_Tunnel","Nameko","_this$props$nameko","Level","level","NamekoArea_Nameko","selectedLevel","onSelectLevel","NamekoArea_Level","App","results","_this$state","TunnelArea_default","NamekoArea_default","baseNamekos","noDup","arguments","ignoreNamekos","newNamekos","indexOf","teams","pickTeam","prevs","currents","slice","sort","b","localeCompare","splice","t","Math","min","goWithAllCombination","ResultArea_default","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3713156c.chunk.js","sourcesContent":["export const allSkills = '石頭 遲鈍 快腿 幸運 嬌小 鐵拳 發光 大力士 泳將 機器人 大胃王 毒 幹勁 飛翔 偵測 屏障 音感 夜視 爆炸 手持武器 潛水 搭乘 耐寒 光合成 可愛 聰明 食物 遠距離攻擊 近距離攻擊 勇氣 犄角 隱身'.split(' ');\n\nexport const allNamekos = '菇菇 小白菇菇 惡魔菇菇 偽裝菇菇 喵咪菇菇 光頭菇菇 白兔菇菇 軟化菇菇 白巧克力菇菇 河童菇菇 不良菇菇 黃色菇菇 夾子菇菇 浪潮菇菇 偽浪潮菇菇 小辣椒菇菇 天使菇菇 野貓菇菇 狗狗菇菇 章魚燒菇菇 黑沉菇菇 迷彩菇菇 菇菇燈泡 小羊菇菇 洋蔥頭菇菇 熔岩菇菇 發光菇菇 將軍菇菇 經理學妹菇菇 緞帶菇菇 NEO菇菇 花粉症菇菇 忍者菇菇 春天菇菇 頑皮菇菇 蘋果菇菇 鱗柄白鵝膏 功夫菇菇 雙葉菇菇 水貂菇菇 毒箭菇菇 苦澀菇菇 畫家菇菇 螢火蟲菇菇 燈飾菇菇 法老菇菇 高麗菜菇菇 白貓菇菇 冰錐菇菇'.split(' ');\n\nexport const is7Namekos = '菇菇 小白菇菇 白兔菇菇 狗狗菇菇 小羊菇菇 發光菇菇 蘋果菇菇 水貂菇菇 燈飾菇菇 高麗菜菇菇 白貓菇菇 冰錐菇菇'.split(' ');\n\nexport const namekoLevelStatusMap = [{\n  name: '70滿',\n  desc: '70滿裝',\n  namekos: [{\n    name: '菇菇',\n    skills: ['幸運', '石頭'],\n    values: [100, 100, 100],\n  }, {\n    name: '小白菇菇',\n    skills: ['遲鈍'],\n    values: [130, 80, 80],\n  }, {\n    name: '惡魔菇菇',\n    skills: ['犄角', '石頭'],\n    values: [75, 80, 120],\n  }, {\n    name: '偽裝菇菇',\n    skills: ['泳將'],\n    values: [95, 125, 95],\n  }, {\n    name: '喵咪菇菇',\n    skills: ['快腿', '夜視'],\n    values: [80, 80, 145],\n  }, {\n    name: '光頭菇菇',\n    skills: ['隱身', '發光'],\n    values: [130, 100, 100],\n  }, {\n    name: '白兔菇菇',\n    skills: ['快腿', '可愛', '幸運', '耐寒', '偵測'],\n    values: [85, 70, 130],\n  }, {\n    name: '軟化菇菇',\n    skills: [],\n    values: [90, 130, 90],\n  }, {\n    name: '白巧克力菇菇',\n    skills: ['食物'],\n    values: [80, 120, 95],\n  }, {\n    name: '河童菇菇',\n    skills: ['泳將'],\n    values: [130, 75, 85],\n  }, {\n    name: '不良菇菇',\n    skills: ['幸運'],\n    values: [110, 115, 155],\n  }, {\n    name: '黃色菇菇',\n    skills: ['幸運', '大胃王'],\n    values: [170, 75, 90],\n  }, {\n    name: '夾子菇菇',\n    skills: ['近距離攻擊'],\n    values: [90, 80, 120],\n  }, {\n    name: '浪潮菇菇',\n    skills: ['泳將', '潛水'],\n    values: [70, 95, 125],\n  }, {\n    name: '偽浪潮菇菇',\n    skills: ['泳將', '潛水'],\n    values: [90, 120, 90],\n  }, {\n    name: '小辣椒菇菇',\n    skills: ['食物', '勇氣', '音感'],\n    values: [95, 115, 155],\n  }, {\n    name: '天使菇菇',\n    skills: ['幸運', '飛翔'],\n    values: [80, 95, 130],\n  }, {\n    name: '野貓菇菇',\n    skills: ['快腿', '夜視'],\n    values: [80, 40, 135],\n  }, {\n    name: '狗狗菇菇',\n    skills: ['快腿'],\n    values: [130, 85, 65],\n  }, {\n    name: '章魚燒菇菇',\n    skills: ['食物'],\n    values: [115, 70, 70],\n  }, {\n    name: '黑沉菇菇',\n    skills: ['隱身', '夜視'],\n    values: [85, 140, 85],\n  }, {\n    name: '迷彩菇菇',\n    skills: ['夜視', '隱身'],\n    values: [50, 90, 125],\n  }, {\n    name: '菇菇燈泡',\n    skills: ['發光', '聰明', '幸運'],\n    values: [80, 135, 90],\n  }, {\n    name: '小羊菇菇',\n    skills: ['耐寒', '犄角'],\n    values: [130, 90, 50],\n  }, {\n    name: '洋蔥頭菇菇',\n    skills: ['近距離攻擊', '犄角'],\n    values: [90, 85, 120],\n  }, {\n    name: '熔岩菇菇',\n    skills: ['石頭', '發光'],\n    values: [160, 95, 45],\n  }, {\n    name: '發光菇菇',\n    skills: ['發光', '光合成'],\n    values: [60, 80, 135],\n  }, {\n    name: '將軍菇菇',\n    skills: ['手持武器', '近距離攻擊'],\n    values: [120, 75, 65],\n  }, {\n    name: '經理學妹菇菇',\n    skills: ['幹勁'],\n    values: [130, 65, 95],\n  }, {\n    name: '緞帶菇菇',\n    skills: ['可愛'],\n    values: [95, 145, 95],\n  }, {\n    name: 'NEO菇菇',\n    skills: ['發光', '夜視', '犄角'],\n    values: [120, 120, 110],\n  }, {\n    name: '花粉症菇菇',\n    skills: ['光合成'],\n    values: [135, 100, 90],\n  }, {\n    name: '忍者菇菇',\n    skills: ['快腿', '手持武器', '遠距離攻擊', '隱身'],\n    values: [90, 90, 130],\n  }, {\n    name: '春天菇菇',\n    skills: ['手持武器', '光合成'],\n    values: [85, 20, 85],\n  }, {\n    name: '頑皮菇菇',\n    skills: ['遲鈍', '毒'],\n    values: [95, 135, 95],\n  }, {\n    name: '蘋果菇菇',\n    skills: ['食物', '勇氣'],\n    values: [115, 115, 115],\n  }, {\n    name: '鱗柄白鵝膏',\n    skills: ['毒', '聰明'],\n    values: [120, 155, 60],\n  }, {\n    name: '功夫菇菇',\n    skills: ['鐵拳', '近距離攻擊', '勇氣'],\n    values: [170, 50, 150],\n  }, {\n    name: '雙葉菇菇',\n    skills: ['偵測', '光合成', '犄角'],\n    values: [150, 95, 120],\n  }, {\n    name: '水貂菇菇',\n    skills: ['快腿', '幸運', '耐寒', '可愛'],\n    values: [100, 120, 155],\n  }, {\n    name: '毒箭菇菇',\n    skills: ['遲鈍', '毒', '偵測'],\n    values: [120, 95, 160],\n  }, {\n    name: '苦澀菇菇',\n    skills: ['聰明', '食物'],\n    values: [95, 165, 95],\n  }, {\n    name: '畫家菇菇',\n    skills: ['手持武器'],\n    values: [100, 145, 120],\n  }, {\n    name: '螢火蟲菇菇',\n    skills: ['快腿', '發光', '飛翔'],\n    values: [130, 90, 150],\n  }, {\n    name: '燈飾菇菇',\n    skills: ['幸運', '發光', '偵測'],\n    values: [95, 125, 130],\n  }, {\n    name: '法老菇菇',\n    skills: ['石頭', '幸運', '聰明'],\n    values: [100, 160, 140],\n  }]\n}, // end of 70滿\n{\n  name: '80滿',\n  desc: '80滿裝',\n  namekos: [{\n    name: '菇菇',\n    skills: ['幸運', '石頭'],\n    values: [110, 110, 110],\n  }, {\n    name: '小白菇菇',\n    skills: ['遲鈍'],\n    values: [160, 100, 100],\n  }, {\n    name: '惡魔菇菇',\n    skills: ['犄角', '石頭'],\n    values: [75, 80, 120],\n  }, {\n    name: '偽裝菇菇',\n    skills: ['泳將'],\n    values: [95, 125, 95],\n  }, {\n    name: '喵咪菇菇',\n    skills: ['快腿', '夜視'],\n    values: [80, 80, 145],\n  }, {\n    name: '光頭菇菇',\n    skills: ['隱身', '發光'],\n    values: [130, 100, 100],\n  }, {\n    name: '白兔菇菇',\n    skills: ['快腿', '可愛', '幸運', '耐寒', '偵測'],\n    values: [110, 80, 150],\n  }, {\n    name: '軟化菇菇',\n    skills: [],\n    values: [90, 130, 90],\n  }, {\n    name: '白巧克力菇菇',\n    skills: ['食物'],\n    values: [80, 120, 95],\n  }, {\n    name: '河童菇菇',\n    skills: ['泳將'],\n    values: [130, 75, 85],\n  }, {\n    name: '不良菇菇',\n    skills: ['幸運'],\n    values: [110, 115, 155],\n  }, {\n    name: '黃色菇菇',\n    skills: ['幸運', '大胃王'],\n    values: [170, 75, 90],\n  }, {\n    name: '夾子菇菇',\n    skills: ['近距離攻擊'],\n    values: [90, 80, 120],\n  }, {\n    name: '浪潮菇菇',\n    skills: ['泳將', '潛水'],\n    values: [70, 95, 125],\n  }, {\n    name: '偽浪潮菇菇',\n    skills: ['泳將', '潛水'],\n    values: [90, 120, 90],\n  }, {\n    name: '小辣椒菇菇',\n    skills: ['食物', '勇氣', '音感'],\n    values: [95, 115, 155],\n  }, {\n    name: '天使菇菇',\n    skills: ['幸運', '飛翔'],\n    values: [80, 95, 130],\n  }, {\n    name: '野貓菇菇',\n    skills: ['快腿', '夜視'],\n    values: [80, 40, 135],\n  }, {\n    name: '狗狗菇菇',\n    skills: ['快腿'],\n    values: [165, 100, 90],\n  }, {\n    name: '章魚燒菇菇',\n    skills: ['食物'],\n    values: [115, 70, 70],\n  }, {\n    name: '黑沉菇菇',\n    skills: ['隱身', '夜視'],\n    values: [85, 140, 85],\n  }, {\n    name: '迷彩菇菇',\n    skills: ['夜視', '隱身'],\n    values: [50, 90, 125],\n  }, {\n    name: '菇菇燈泡',\n    skills: ['發光', '聰明', '幸運'],\n    values: [80, 135, 90],\n  }, {\n    name: '小羊菇菇',\n    skills: ['耐寒', '犄角'],\n    values: [150, 110, 80],\n  }, {\n    name: '洋蔥頭菇菇',\n    skills: ['近距離攻擊', '犄角'],\n    values: [90, 85, 120],\n  }, {\n    name: '熔岩菇菇',\n    skills: ['石頭', '發光'],\n    values: [160, 95, 45],\n  }, {\n    name: '發光菇菇',\n    skills: ['發光', '光合成'],\n    values: [75, 100, 165],\n  }, {\n    name: '將軍菇菇',\n    skills: ['手持武器', '近距離攻擊'],\n    values: [120, 75, 65],\n  }, {\n    name: '經理學妹菇菇',\n    skills: ['幹勁'],\n    values: [130, 65, 95],\n  }, {\n    name: '緞帶菇菇',\n    skills: ['可愛'],\n    values: [95, 145, 95],\n  }, {\n    name: 'NEO菇菇',\n    skills: ['發光', '夜視', '犄角'],\n    values: [120, 120, 110],\n  }, {\n    name: '花粉症菇菇',\n    skills: ['光合成'],\n    values: [135, 100, 90],\n  }, {\n    name: '忍者菇菇',\n    skills: ['快腿', '手持武器', '遠距離攻擊', '隱身'],\n    values: [90, 90, 130],\n  }, {\n    name: '春天菇菇',\n    skills: ['手持武器', '光合成'],\n    values: [85, 20, 85],\n  }, {\n    name: '頑皮菇菇',\n    skills: ['遲鈍', '毒'],\n    values: [95, 135, 95],\n  }, {\n    name: '蘋果菇菇',\n    skills: ['食物', '勇氣'],\n    values: [145, 145, 150],\n  }, {\n    name: '鱗柄白鵝膏',\n    skills: ['毒', '聰明'],\n    values: [120, 155, 60],\n  }, {\n    name: '功夫菇菇',\n    skills: ['鐵拳', '近距離攻擊', '勇氣'],\n    values: [170, 50, 150],\n  }, {\n    name: '雙葉菇菇',\n    skills: ['偵測', '光合成', '犄角'],\n    values: [150, 95, 120],\n  }, {\n    name: '水貂菇菇',\n    skills: ['快腿', '幸運', '耐寒', '可愛'],\n    values: [110, 130, 170],\n  }, {\n    name: '毒箭菇菇',\n    skills: ['遲鈍', '毒', '偵測'],\n    values: [120, 95, 160],\n  }, {\n    name: '苦澀菇菇',\n    skills: ['聰明', '食物'],\n    values: [95, 165, 95],\n  }, {\n    name: '畫家菇菇',\n    skills: ['手持武器'],\n    values: [100, 145, 120],\n  }, {\n    name: '螢火蟲菇菇',\n    skills: ['快腿', '發光', '飛翔'],\n    values: [130, 90, 150],\n  }, {\n    name: '燈飾菇菇',\n    skills: ['幸運', '發光', '偵測'],\n    values: [120, 140, 150],\n  }, {\n    name: '法老菇菇',\n    skills: ['石頭', '幸運', '聰明'],\n    values: [100, 160, 140],\n  }, {\n    name: '高麗菜菇菇',\n    skills: ['耐寒', '光合成', '食物', '隱身'],\n    values: [140, 140, 110],\n  }, {\n    name: '白貓菇菇',\n    skills: ['快腿', '夜視', '耐寒'],\n    values: [120, 140, 140],\n  }, {\n    name: '冰錐菇菇',\n    skills: ['耐寒', '遠距離攻擊', '犄角'],\n    values: [160, 110, 135],\n  }]\n}, // end of 80滿\n];\n\nexport const allTunnelConfig = [{\n  name: '6樹根隧道_中途',\n  count: 3,\n  memos: [{\n    type: '有1隻',\n    valueThresholds: [['red', 85]],\n    skillValueBonus: null,\n    name: '推開樹根前進',\n    reward: ['濃稠樹液', 2],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 100]],\n    skillValueBonus: null,\n    name: '穿越盤根錯節的樹根吧',\n    reward: ['發光樹根', 2],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 150]],\n    skillValueBonus: null,\n    name: '突破樹根之壁吧',\n    reward: ['樹根群柱', 1],\n  }, {\n    type: '有2隻',\n    valueThresholds: [['red', 120]],\n    skillValueBonus: ['快腿', 'red', 40],\n    name: '運送樹根吧',\n    reward: ['發光樹根', 2],\n  }, {\n    type: '有2隻',\n    valueThresholds: [['red', 140]],\n    skillValueBonus: ['快腿', 'red', 50],\n    name: '運送更多樹根吧',\n    reward: ['真理樹根', 1],\n  }, {\n    type: '有3隻',\n    valueThresholds: [['red', 110]],\n    skillValueBonus: ['快腿', 'red', 50],\n    name: '運送巨大樹根吧',\n    reward: ['生命樹根', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['blue', 100]],\n    skillValueBonus: null,\n    name: '解開糾纏的樹根吧',\n    reward: ['樹根群柱', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['blue', 140]],\n    skillValueBonus: ['偵測', 'blue', 40],\n    name: '在黑暗中解開樹根',\n    reward: ['樹液晶', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['green', 95]],\n    skillValueBonus: null,\n    name: '快速解開樹根',\n    reward: ['樹液晶', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['green', 160]],\n    skillValueBonus: ['偵測', 'green', 50],\n    name: '在水裡解開樹根',\n    reward: ['樹根群柱', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 110], ['blue', 100]],\n    skillValueBonus: ['近距離攻擊', 'blue', 20],\n    name: '緊密糾結的樹根',\n    reward: ['樹根群柱', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 110], ['green', 130]],\n    skillValueBonus: ['近距離攻擊', 'green', 20],\n    name: '只有樹根',\n    reward: ['生命樹根', 1],\n  }, {\n    // TODO handle this_nameko_has & all_nameko_has\n    type: '總和',\n    valueThresholds: [['red', 380]],\n    skillValueBonus: null,\n    name: '大家一起拔樹根吧',\n    reward: ['樹液晶', 1],\n  }, {\n    type: '總和',\n    valueThresholds: [['red', 420]],\n    skillValueBonus: ['近距離攻擊', 'red', 40],\n    name: '拔更多樹根吧',\n    reward: ['樹根群柱', 1],\n  }, {\n    type: '總和',\n    valueThresholds: [['red', 450]],\n    skillValueBonus: ['近距離攻擊', 'red', 50],\n    name: '拔起巨大樹根吧',\n    reward: ['樹液晶', 2],\n  }, {\n    type: '總和',\n    valueThresholds: [['blue', 300]],\n    skillValueBonus: ['偵測', 'blue', 50],\n    name: '在幽暗的房裡搬運樹根',\n    reward: ['生命樹根', 1],\n  }, {\n    type: '總和',\n    valueThresholds: [['green', 480]],\n    skillValueBonus: ['快腿', 'green', 50],\n    name: '準備好囉～挖樹根！',\n    reward: ['樹根群柱', 2],\n  }, {\n    type: '1隻有skill',\n    skills: ['手持武器'],\n    name: '砍除樹根前進吧',\n    reward: ['濃稠樹液', 1],\n  }, {\n    type: '1隻有skill',\n    skills: ['近距離攻擊'],\n    name: '糾纏的樹根',\n    reward: ['樹根群柱', 1],\n  }],\n}, {\n  name: '7_1清涼結冰洞_筆直通道',\n  count: 3,\n  is7: true,\n  memos: [{\n    type: '有1隻',\n    valueThresholds: [['red', 130]],\n    skillValueBonus: null,\n    name: '寒冷通道',\n    reward: ['萬年冰', 2],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 150]],\n    skillValueBonus: ['耐寒', 'red', 30],\n    name: '寒意刺骨通道',\n    reward: ['固定結晶（棱柱）', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 160]],\n    skillValueBonus: null,\n    name: '又冷又長的通道',\n    reward: ['結冰天使', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['blue', 100]],\n    skillValueBonus: null,\n    name: '冰冷的出風口',\n    reward: ['萬年冰', 1],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['blue', 120]],\n    skillValueBonus: null,\n    name: '狂風呼嘯的出風口',\n    reward: ['薄切肉片', 4],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['green', 100]],\n    skillValueBonus: null,\n    name: '搖搖晃晃冰柱橋',\n    reward: ['萬年冰', 1],\n  }, {\n    type: '有3隻',\n    valueThresholds: [['green', 90]],\n    skillValueBonus: null,\n    name: '薄冰之橋',\n    reward: ['御好燒', 2],\n  }, {\n    type: '有1隻',\n    valueThresholds: [['red', 85], ['green', 130]],\n    skillValueBonus: ['耐寒', 'red', 40],\n    name: '滾雪球',\n    reward: ['固定結晶（棱柱）', 1],\n  }, {\n    type: '總和',\n    valueThresholds: [['red', 380]],\n    skillValueBonus: ['幸運', 'red', 10],\n    name: '大家一起取暖',\n    reward: ['結冰天使', 1],\n  }, {\n    type: '1隻有skill',\n    skills: ['光合成'],\n    name: '陽光灑落的小房間',\n    reward: ['萬年冰', 1],\n  }],\n}];\n","const allSkills = '石頭 遲鈍 快腿 幸運 嬌小 鐵拳 發光 大力士 泳將 機器人 大胃王 毒 幹勁 飛翔 偵測 屏障 音感 夜視 爆炸 手持武器 潛水 搭乘 耐寒 光合成 可愛 聰明 食物 遠距離攻擊 近距離攻擊 勇氣 犄角 隱身'.split(' ');\n\nconst allNamekos = '菇菇 小白菇菇 惡魔菇菇 偽裝菇菇 喵咪菇菇 光頭菇菇 白兔菇菇 軟化菇菇 白巧克力菇菇 河童菇菇 不良菇菇 黃色菇菇 夾子菇菇 浪潮菇菇 偽浪潮菇菇 小辣椒菇菇 天使菇菇 野貓菇菇 狗狗菇菇 章魚燒菇菇 黑沉菇菇 迷彩菇菇 菇菇燈泡 小羊菇菇 洋蔥頭菇菇 熔岩菇菇 發光菇菇 將軍菇菇 經理學妹菇菇 緞帶菇菇 NEO菇菇 花粉症菇菇 忍者菇菇 春天菇菇 頑皮菇菇 蘋果菇菇 鱗柄白鵝膏 功夫菇菇 雙葉菇菇 水貂菇菇 毒箭菇菇 苦澀菇菇 畫家菇菇 螢火蟲菇菇 燈飾菇菇 法老菇菇 高麗菜菇菇 白貓菇菇 冰錐菇菇'.split(' ');\n\nconst is7Namekos = '菇菇 小白菇菇 白兔菇菇 狗狗菇菇 小羊菇菇 發光菇菇 蘋果菇菇 水貂菇菇 燈飾菇菇 高麗菜菇菇 白貓菇菇 冰錐菇菇'.split(' ');\n\nconst allTreasures = '瓦斯球 琥珀菇 樹根群柱 生命樹根 固定結晶（棱柱） 固定結晶（樹枝星狀） 固定結晶（星盤狀） 結冰天使'.split(' ');\n\nconst allStuffs = '除臭岩 濃稠樹液 樹液晶 萬年冰'.split(' ');\n\nfunction go(tunnel, team) {\n  const log = () => null;\n  //const log = console.log;\n\n  log(' >> Tunnel', tunnel.name);\n  log('          ', team.map(n => n.name).join(', '));\n\n  let passedMemos = [];\n  let unpassedMemos = [];\n\n  for (let memo of tunnel.memos) {\n    const { type, valueThresholds: vts, skillValueBonus: svb, skills } = memo;\n    const [ skill, sValue, bonus, needAll ] = (svb || []);\n    log('      Memo');\n    skills && log('        type', type, `[${skills.join(', ')}]`);\n    vts    && log('        type', type, `[${(vts || []).map(a => a.join(':')).join(', ')}]`);\n    svb    && log('        svb', svb.join(' '));\n\n    let passed = false;\n\n    if ('總和' === type) {\n      const [ value, threshold ] = vts[0]; // TODO 會有多個技能組的可能嗎？\n\n      let namekoValue = 0;\n      let allHas = true;\n\n      for (let member of team) {\n        const nameko = {\n          name:   member.name,\n          skills: member.skills,\n          red:    member.values[0],\n          blue:   member.values[1],\n          green:  member.values[2],\n        };\n\n        if (needAll && !nameko.skills.includes(skill)) {\n          allHas = false;\n        }\n\n        namekoValue += nameko[value];\n\n        if (!needAll && nameko.skills.includes(skill) && value === sValue) {\n          namekoValue += bonus;\n        }\n      }\n\n      if (skill && needAll && allHas) {\n        namekoValue += bonus;\n      }\n\n      if (namekoValue >= threshold) {\n        passed = true;\n      }\n    } else if ('有1隻' === type || '有2隻' === type || '有3隻' === type) {\n      const needCount = parseInt(type.substr(1, 1));\n      let currentCount = 0;\n\n      for (let member of team) {\n        let res = true;\n\n        const nameko = {\n          name:   member.name,\n          skills: member.skills,\n          red:    member.values[0],\n          blue:   member.values[1],\n          green:  member.values[2],\n        };\n\n        for (let vt of vts) {\n          const [ value, threshold ] = vt;\n\n          let namekoValue = nameko[value];\n          if (nameko.skills.includes(skill) && value === sValue) {\n            namekoValue += bonus;\n          }\n\n          if (namekoValue < threshold) {\n            res = false;\n            break;\n          }\n        }\n\n        log(`          (${res ? 'O' : 'X'})`, nameko.name, `[${nameko.skills.join(', ')}]`, nameko.red, nameko.blue, nameko.green);\n\n        if (res) {\n          currentCount++;\n          if (currentCount === needCount) {\n            passed = true;\n            break;\n          }\n        }\n      }\n    } else if ('1隻有skill' === type) {\n      for (let nameko of team) {\n        let res = true;\n\n        for (let s of skills) {\n          if (!nameko.skills.includes(s)) {\n            res = false;\n            break;\n          }\n        }\n\n        if (res) {\n          passed = true;\n          break;\n        }\n      }\n    } else if ('全部有skill' === type) {\n      let count = 0;\n\n      for (let nameko of team) {\n        let res = true;\n\n        for (let s of skills) {\n          if (!nameko.skills.includes(s)) {\n            res = false;\n            break;\n          }\n        }\n\n        if (res) {\n          count++;\n        }\n      }\n\n      passed = count === team.length;\n    }\n\n    (passed ? passedMemos : unpassedMemos).push(memo);\n    log(`        passed => (${passed ? 'O' : 'X'})`);\n  }\n\n  log('    Memos', passedMemos);\n  log(`    pass ${passedMemos.length} of ${tunnel.memos.length}`);\n  log(' >> end tunnel', tunnel.name);\n\n  return { team, passedMemos, unpassedMemos };\n}\n\nfunction goWithTeam(tunnel, team) {\n  console.log('* ' + tunnel.name + ' with the specified team');\n  if (!verifyNamekos(team)) {\n    return;\n  }\n\n  if (tunnel.is7) {\n    let newNamekos = []\n    team.forEach(n => is7Namekos.includes(n.name) && newNamekos.push(n));\n    team = newNamekos;\n    //console.log('update for 7', newNamekos);\n  }\n\n  if (tunnel.count !== team.length) {\n    console.log(tunnel.count, team.length);\n    throw 'goWithTeam: BAD team member';\n  }\n\n  let { passedMemos, unpassedMemos } = go(tunnel, team);\n  printResult(go(tunnel, team), tunnel);\n}\n\nexport function goWithAllCombination(tunnel, baseNamekos, noDup = true, ignoreNamekos = []) {\n  console.log('* ' + tunnel.name + ' with all combinations');\n  if (!verifyNamekos(baseNamekos)) {\n    return;\n  }\n\n  if (tunnel.is7) {\n    let newNamekos = []\n    baseNamekos.forEach(n => is7Namekos.includes(n.name) && newNamekos.push(n));\n    baseNamekos = newNamekos;\n    //console.log('update for 7', newNamekos);\n  }\n\n  if (ignoreNamekos) {\n    let newNamekos = []\n    baseNamekos.forEach(n => ignoreNamekos.indexOf(n.name) === -1 && newNamekos.push(n));\n    baseNamekos = newNamekos;\n    //console.log('update for ignore', newNamekos);\n  }\n\n  if ((!noDup && baseNamekos.length <= 0) || (noDup && tunnel.count > baseNamekos.length)) {\n    console.log(noDup, tunnel.count, baseNamekos.length);\n    throw 'goWithTeam: BAD team member';\n  }\n\n  const { count } = tunnel;\n  const teams = [];\n  const results = [];\n\n  let counter = 1;\n\n  function pickTeam(prevs) {\n    for (let i = 0; i < baseNamekos.length; i++) {\n      let currents = prevs.slice();\n\n      if (noDup && -1 !== currents.indexOf(baseNamekos[i])) {\n        continue;\n      }\n\n      currents.push(baseNamekos[i]);\n\n      if (count === currents.length) {\n        //console.log('currents', currents.map(c => c.name));\n        teams.push(currents);\n      } else {\n        pickTeam(currents);\n      }\n    }\n  }\n\n  // pick all combinations\n  pickTeam([]);\n  //console.log('length', teams.length);\n\n  // sort every team\n  for (let i = 0; i < teams.length; i++) {\n    teams[i].sort((a, b) => a.name.localeCompare(b.name));\n  }\n  teams.sort((a, b) => a.map(n => n.name).join(',').localeCompare(b.map(n => n.name).join(',')));\n  //teams.forEach(t => console.log(t.map(n => n.name).join(',')));\n\n  // remove dulicated combinations\n  let i = 1;\n  while (teams[i]) {\n    if (teams[i - 1].map(n => n.name).join(',') === teams[i].map(n => n.name).join(',')) {\n      teams.splice(i, 1);\n    } else {\n      i++;\n    }\n  }\n  //teams.forEach(t => console.log(t.map(n => n.name).join(',')));\n\n  // test every combinations\n  teams.forEach(t => {\n    let r = go(tunnel, t);\n    results.push(r);\n    //console.log(' >> finish combination count', results.length);\n  });\n\n  // sort results\n  //results.sort((r1, r2) => r2.passedMemos.length - r1.passedMemos.length);\n  results.sort(sortResults);\n\n  // show results\n  const limit = 50;\n  for (let i = Math.min(limit, results.length) - 1; i >=0 && i < results.length; i--) {\n    printResult(results[i], tunnel);\n  }\n  outerPrintFunc(gResults);\n}\n\nfunction verifyNamekos(namekos) {\n  for (let n of namekos) {\n    if (!allNamekos.includes(n.name)) {\n      console.log(' >> verify bad 1', n, namekos);\n      return false;\n    }\n    for (let v of n.values) {\n      if (!Number.isInteger(v) || v <= 0) {\n        console.log(' >> verify bad 2', n, namekos);\n        return false;\n      }\n    }\n    for (let s of n.skills) {\n      if (!allSkills.includes(s)) {\n        console.log(' >> verify bad 3', n, namekos);\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nfunction sortResults(r1, r2) {\n  //console.log('sort');\n  const byPassCount = (r1, r2) => {\n    //console.log('  byPassCount', r2.passedMemos.length - r1.passedMemos.length);\n    return r2.passedMemos.length - r1.passedMemos.length;\n  };\n\n  const byTreasure = (r1, r2) => {\n    let r1Count = 0;\n    r1.passedMemos.forEach(p => {\n      if (allTreasures.includes(p.reward[0])) {\n        r1Count += p.reward[1];\n      }\n    })\n\n    let r2Count = 0;\n    r2.passedMemos.forEach(p => {\n      if (allTreasures.includes(p.reward[0])) {\n        r2Count += p.reward[1];\n      }\n    })\n\n    //console.log('  byTreasure', r2Count - r1Count);\n    return r2Count - r1Count;\n  };\n\n  const byStuff = (r1, r2) => {\n    let r1Count = 0;\n    r1.passedMemos.forEach(p => {\n      if (allStuffs.includes(p.reward[0])) {\n        r1Count += p.reward[1];\n      }\n    })\n\n    let r2Count = 0;\n    r2.passedMemos.forEach(p => {\n      if (allStuffs.includes(p.reward[0])) {\n        r2Count += p.reward[1];\n      }\n    })\n\n    //console.log('  byStuff', r2Count - r1Count);\n    return r2Count - r1Count;\n  };\n\n  //let funcs = [byTreasure, byPassCount];\n  //let funcs = [byTreasure, byPassCount, byStuff];\n  let funcs = [byStuff, byTreasure, byPassCount];\n  for (let i = 0; i < funcs.length; i++) {\n    let r = funcs[i](r1, r2);\n    if (r !== 0 || i === funcs.length - 1) {\n      //console.log('return r', r);\n      return r;\n    }\n  }\n  console.log('return WTF');\n}\n\nfunction printResult(result, tunnel) {\n  //const showPassed = true;\n  const showPassed = false;\n  const showUnpassed = true;\n  //const showUnpassed = false;\n\n  let { team, passedMemos, unpassedMemos } = result;\n\n  //console.log(`    ${passedMemos.length}/${tunnel.memos.length},\\t${team.map(n => n.name).join(', ')}`);\n  func(`    ${passedMemos.length}/${tunnel.memos.length},\\t${team.map(n => n.name).join(', ')}`);\n\n  if (showPassed) {\n    for (let memo of passedMemos) {\n      let { type, reward: r, valueThresholds: v, skills: s, name } = memo;\n      //console.log(`      ${showUnpassed?'(O)':''}${r[0]}*${r[1]}  \\t${type}${v?v.map(a=>a.join(':')).join() : ''}${s?s.join(','):''}\\t${name}`);\n      func(`      ${showUnpassed?'(O)':''}${r[0]}*${r[1]}  \\t${type}${v?v.map(a=>a.join(':')).join() : ''}${s?s.join(','):''}\\t${name}`);\n    }\n  }\n\n  if (showUnpassed) {\n    for (let memo of unpassedMemos) {\n      let { type, reward: r, valueThresholds: v, skills: s, name } = memo;\n      //console.log(`      ${showPassed?'(X)':''}${r[0]}*${r[1]}  \\t${type}${v?v.map(a=>a.join(':')).join() : ''}${s?s.join(','):''}\\t${name}`);\n      func(`      ${showPassed?'(X)':''}${r[0]}*${r[1]}  \\t${type}${v?v.map(a=>a.join(':')).join() : ''}${s?s.join(','):''}\\t${name}`);\n    }\n  }\n}\n\n// TODO add 4th中途 without 功夫\n\n  /*\nfunction useEquipment() {\n  console.log(' >> useEquipment');\n  for (const key in namekoSets) {\n    namekoSets[key].namekos.forEach(n => {\n      if (n.values2) {\n        n.values[0] += n.values2[0];\n        n.values[1] += n.values2[1];\n        n.values[2] += n.values2[2];\n      }\n    });\n  }\n}\n*/\n\n/* config */\n\n//useEquipment();\n\nlet ignoreNamekos = [];\n//ignoreNamekos = '功夫菇菇'.split(' ');\n//ignoreNamekos = '小白菇菇'.split(' ');\n//ignoreNamekos = '雙葉菇菇'.split(' ');\n\n//goWithAllCombination(tunnel, set.namekos, true, ignoreNamekos);\n\nlet gResults = [];\nconst func = str => gResults.push(str);\n\nlet outerPrintFunc = () => null;\n\nexport function setPrintFunc(newFunc) {\n  outerPrintFunc = newFunc;\n}\n","// react\nimport React, { Component } from 'react';\n\n// custom\nimport { allTunnelConfig } from '../lib/data';\n\nclass Memo extends Component {\n  render() {\n    const { name, type } = this.props.memo;\n\n    return (\n      <div className='memo'>\n        {`${name}: ${type}`}\n      </div>\n    );\n  }\n}\n\nclass Tunnel extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      opened: false,\n    };\n  }\n\n  render() {\n    const { opened } = this.state;\n    const { tunnel, isSelected, onSelect } = this.props;\n    const { name, count, memos } = tunnel;\n\n    return (\n      <div className='tunnel' style={{ backgroundColor: isSelected ? 'lightsalmon' : 'transparent' }}>\n        <div>\n          <button onClick={() => !isSelected && onSelect(tunnel)}>\n            Select this\n          </button>\n          {name}\n          <button onClick={() => this.setState({ opened: !opened })}>\n            {opened ? 'close' : 'open'}\n          </button>\n        </div>\n        <div>{count}</div>\n        {opened && <div>\n          {memos.map((memo, idx) => <Memo key={idx} memo={memo} />)}\n        </div>}\n      </div>\n    );\n  }\n}\n\nexport default class extends Component {\n  render() {\n    const { selectedTunnel, onSelectTunnel } = this.props;\n\n    return (\n      <div className='tunnel-area'>\n        {allTunnelConfig.map((config, idx) => {\n          const isSelected = config === selectedTunnel;\n\n          return (\n            <Tunnel key={idx} tunnel={config} isSelected={isSelected} onSelect={tunnel => onSelectTunnel(tunnel)} />\n          );\n        })}\n      </div>\n    )\n  }\n}\n","// react\nimport React, { Component } from 'react';\n\n// custom\nimport { namekoLevelStatusMap } from '../lib/data';\n\nclass Nameko extends Component {\n  render() {\n    const { name, skills, values } = this.props.nameko;\n\n    return (\n      <div className='nameko'>\n        <span>{name}</span>\n        <span>\n          {skills && skills.map((skill, idx) => <span key={idx}>{skill}</span>)}\n        </span>\n        <span>\n          {values.map((value, idx) => <span key={idx}>{value}</span>)}\n        </span>\n      </div>\n    );\n  }\n}\n\nclass Level extends Component {\n  render() {\n    const { level, isSelected, onSelect } = this.props;\n    const { name, desc, namekos } = level;\n\n    return (\n      <div className='level' style={{ backgroundColor: isSelected ? 'lightsalmon' : 'transparent' }}>\n        <div>\n          <button onClick={() => !isSelected && onSelect(level)}>\n            Select this\n          </button>\n          {`${name} ${desc}`}\n        </div>\n        <div>\n          {namekos.map((nameko, idx) => <Nameko key={idx} nameko={nameko} />)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default class extends Component {\n  render() {\n    const { selectedLevel, onSelectLevel } = this.props;\n\n    return (\n      <div className='nameko-area'>\n        {namekoLevelStatusMap.map((level, idx) => {\n          const isSelected = level === selectedLevel;\n\n          return (\n            <Level key={idx} level={level} isSelected={isSelected} onSelect={level => onSelectLevel(level)}/>\n          );\n        })}\n      </div>\n    );\n  }\n}\n","// react\nimport React, { Component } from 'react';\n\n// custom\n//import { namekoLevelStatusMap } from '../lib/data';\n\nexport default class extends Component {\n  render() {\n    return (\n      <div className='result-area'>\n      </div>\n    );\n  }\n}\n","// react\nimport React, { Component } from 'react';\n\n// custom\nimport './App.css';\nimport { namekoLevelStatusMap, allTunnelConfig } from './lib/data';\nimport { setPrintFunc, goWithAllCombination } from './lib/test';\nimport TunnelArea from './comps/TunnelArea';\nimport NamekoArea from './comps/NamekoArea';\nimport ResultArea from './comps/ResultArea';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tunnel: allTunnelConfig[1],\n      level: namekoLevelStatusMap[0],\n      results: [],\n    };\n  }\n\n  onSelectTunnel(tunnel) {\n    this.setState({ tunnel });\n  }\n\n  onSelectLevel(level) {\n    this.setState({ level });\n  }\n\n  render() {\n    const { tunnel, level, results } = this.state;\n    console.log('results', results);\n\n    return (\n      <div className='app'>\n        <TunnelArea\n          selectedTunnel={tunnel}\n          onSelectTunnel={tunnel => this.onSelectTunnel(tunnel)}\n        />\n        <NamekoArea\n          selectedLevel={level}\n          onSelectLevel={level => this.onSelectLevel(level)}\n        />\n        <div>\n          <button onClick={() => {\n            setPrintFunc(results => this.setState({ results }));\n            goWithAllCombination(tunnel, level.namekos);\n            console.log('DONE!');\n          }}>\n            Run test\n          </button>\n        </div>\n        <ResultArea />\n        <div>\n          {results.map((r, idx) => <div key={idx}>{r}</div>)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}